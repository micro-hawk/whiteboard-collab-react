[{"/home/microhawk/github/whiteboard-collab-react/ui/src/index.js":"1","/home/microhawk/github/whiteboard-collab-react/ui/src/App.js":"2","/home/microhawk/github/whiteboard-collab-react/ui/src/reportWebVitals.js":"3","/home/microhawk/github/whiteboard-collab-react/ui/src/components/container/Container.jsx":"4","/home/microhawk/github/whiteboard-collab-react/ui/src/components/board/Board.jsx":"5"},{"size":500,"mtime":1612024799007,"results":"6","hashOfConfig":"7"},{"size":170,"mtime":1612080782847,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612024799007,"results":"9","hashOfConfig":"7"},{"size":578,"mtime":1612101404609,"results":"10","hashOfConfig":"7"},{"size":1752,"mtime":1612100462147,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1il22sa",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/microhawk/github/whiteboard-collab-react/ui/src/index.js",[],["24","25"],"/home/microhawk/github/whiteboard-collab-react/ui/src/App.js",[],"/home/microhawk/github/whiteboard-collab-react/ui/src/reportWebVitals.js",[],"/home/microhawk/github/whiteboard-collab-react/ui/src/components/container/Container.jsx",["26","27"],"/home/microhawk/github/whiteboard-collab-react/ui/src/components/board/Board.jsx",["28"],"import React from \"react\";\nimport \"./style.css\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.drawOnCan();\n  }\n  drawOnCan() {\n    var canvas = document.querySelector(\"#paint\");\n    var ctx = canvas.getContext(\"2d\");\n\n    var sketch = document.querySelector(\"#sketch\");\n    var sketch_style = getComputedStyle(sketch);\n    canvas.width = parseInt(sketch_style.getPropertyValue(\"width\"));\n    canvas.height = parseInt(sketch_style.getPropertyValue(\"height\"));\n\n    var mouse = { x: 0, y: 0 };\n    var last_mouse = { x: 0, y: 0 };\n\n    /* Mouse Capturing Work */\n    canvas.addEventListener(\n      \"mousemove\",\n      function (e) {\n        last_mouse.x = mouse.x;\n        last_mouse.y = mouse.y;\n\n        mouse.x = e.pageX - this.offsetLeft;\n        mouse.y = e.pageY - this.offsetTop;\n      }\n      //   false\n    );\n\n    /* Drawing on Paint App */\n    ctx.lineWidth = 10;\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"green\";\n\n    canvas.addEventListener(\n      \"mousedown\",\n      function (e) {\n        canvas.addEventListener(\"mousemove\", onPaint, false);\n      },\n      false\n    );\n\n    canvas.addEventListener(\n      \"mouseup\",\n      function () {\n        canvas.removeEventListener(\"mousemove\", onPaint, false);\n      },\n      false\n    );\n\n    var onPaint = function () {\n      ctx.beginPath();\n      ctx.moveTo(last_mouse.x, last_mouse.y);\n      ctx.lineTo(mouse.x, mouse.y);\n      ctx.closePath();\n      ctx.stroke();\n    };\n  }\n  render() {\n    return (\n      <div className=\"sketch\" id=\"sketch\">\n        <canvas id=\"paint\"></canvas>\n        <canvas className=\"board\" id=\"board\"></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":6,"column":3,"nodeType":"35","messageId":"36","endLine":8,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":12,"column":9,"nodeType":"39","messageId":"40","endLine":12,"endColumn":17},{"ruleId":"33","severity":1,"message":"34","line":5,"column":3,"nodeType":"35","messageId":"36","endLine":7,"endColumn":4},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'theColor' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]