{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/microhawk/github/whiteboard-collab-react/ui/src/components/board/Board.jsx\";\nimport React from \"react\";\nimport \"./style.css\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.drawOnCan();\n  }\n\n  drawOnCan() {\n    // create canvas element and append it to document body\n    var canvas = document.createElement(\"canvas\");\n    document.body.appendChild(canvas); // some hotfixes... ( ≖_≖)\n\n    document.body.style.margin = 0;\n    canvas.style.position = \"fixed\"; // get canvas 2D context and set him correct size\n\n    var ctx = canvas.getContext(\"2d\");\n    resize(); // last known position\n\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    window.addEventListener(\"resize\", resize);\n    document.addEventListener(\"mousemove\", draw);\n    document.addEventListener(\"mousedown\", setPosition);\n    document.addEventListener(\"mouseenter\", setPosition); // new position from mouse event\n\n    function setPosition(e) {\n      pos.x = e.clientX;\n      pos.y = e.clientY;\n    } // resize canvas\n\n\n    function resize() {\n      ctx.canvas.width = window.innerWidth;\n      ctx.canvas.height = window.innerHeight;\n    }\n\n    function draw(e) {\n      // mouse left button must be pressed\n      if (e.buttons !== 1) return;\n      ctx.beginPath(); // begin\n\n      ctx.lineWidth = 10;\n      ctx.lineCap = \"round\";\n      ctx.strokeStyle = \"black\";\n      ctx.moveTo(pos.x, pos.y); // from\n\n      setPosition(e);\n      ctx.lineTo(pos.x, pos.y); // to\n\n      ctx.stroke(); // draw it!\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sketch\",\n      id: \"sketch\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"board\",\n        id: \"board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/microhawk/github/whiteboard-collab-react/ui/src/components/board/Board.jsx"],"names":["React","Board","Component","constructor","props","componentDidMount","drawOnCan","canvas","document","createElement","body","appendChild","style","margin","position","ctx","getContext","resize","pos","x","y","window","addEventListener","draw","setPosition","e","clientX","clientY","width","innerWidth","height","innerHeight","buttons","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AACA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AACDA,EAAAA,SAAS,GAAG;AACV;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B,EAHU,CAKV;;AACAC,IAAAA,QAAQ,CAACE,IAAT,CAAcE,KAAd,CAAoBC,MAApB,GAA6B,CAA7B;AACAN,IAAAA,MAAM,CAACK,KAAP,CAAaE,QAAb,GAAwB,OAAxB,CAPU,CASV;;AACA,QAAIC,GAAG,GAAGR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAV;AACAC,IAAAA,MAAM,GAXI,CAaV;;AACA,QAAIC,GAAG,GAAG;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAV;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,MAAlC;AACAT,IAAAA,QAAQ,CAACc,gBAAT,CAA0B,WAA1B,EAAuCC,IAAvC;AACAf,IAAAA,QAAQ,CAACc,gBAAT,CAA0B,WAA1B,EAAuCE,WAAvC;AACAhB,IAAAA,QAAQ,CAACc,gBAAT,CAA0B,YAA1B,EAAwCE,WAAxC,EAnBU,CAqBV;;AACA,aAASA,WAAT,CAAqBC,CAArB,EAAwB;AACtBP,MAAAA,GAAG,CAACC,CAAJ,GAAQM,CAAC,CAACC,OAAV;AACAR,MAAAA,GAAG,CAACE,CAAJ,GAAQK,CAAC,CAACE,OAAV;AACD,KAzBS,CA2BV;;;AACA,aAASV,MAAT,GAAkB;AAChBF,MAAAA,GAAG,CAACR,MAAJ,CAAWqB,KAAX,GAAmBP,MAAM,CAACQ,UAA1B;AACAd,MAAAA,GAAG,CAACR,MAAJ,CAAWuB,MAAX,GAAoBT,MAAM,CAACU,WAA3B;AACD;;AAED,aAASR,IAAT,CAAcE,CAAd,EAAiB;AACf;AACA,UAAIA,CAAC,CAACO,OAAF,KAAc,CAAlB,EAAqB;AAErBjB,MAAAA,GAAG,CAACkB,SAAJ,GAJe,CAIE;;AAEjBlB,MAAAA,GAAG,CAACmB,SAAJ,GAAgB,EAAhB;AACAnB,MAAAA,GAAG,CAACoB,OAAJ,GAAc,OAAd;AACApB,MAAAA,GAAG,CAACqB,WAAJ,GAAkB,OAAlB;AAEArB,MAAAA,GAAG,CAACsB,MAAJ,CAAWnB,GAAG,CAACC,CAAf,EAAkBD,GAAG,CAACE,CAAtB,EAVe,CAUW;;AAC1BI,MAAAA,WAAW,CAACC,CAAD,CAAX;AACAV,MAAAA,GAAG,CAACuB,MAAJ,CAAWpB,GAAG,CAACC,CAAf,EAAkBD,GAAG,CAACE,CAAtB,EAZe,CAYW;;AAE1BL,MAAAA,GAAG,CAACwB,MAAJ,GAde,CAcD;AACf;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,QAA3B;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,EAAE,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA/DiC;;AAkEpC,eAAevC,KAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.drawOnCan();\n  }\n  drawOnCan() {\n    // create canvas element and append it to document body\n    var canvas = document.createElement(\"canvas\");\n    document.body.appendChild(canvas);\n\n    // some hotfixes... ( ≖_≖)\n    document.body.style.margin = 0;\n    canvas.style.position = \"fixed\";\n\n    // get canvas 2D context and set him correct size\n    var ctx = canvas.getContext(\"2d\");\n    resize();\n\n    // last known position\n    var pos = { x: 0, y: 0 };\n\n    window.addEventListener(\"resize\", resize);\n    document.addEventListener(\"mousemove\", draw);\n    document.addEventListener(\"mousedown\", setPosition);\n    document.addEventListener(\"mouseenter\", setPosition);\n\n    // new position from mouse event\n    function setPosition(e) {\n      pos.x = e.clientX;\n      pos.y = e.clientY;\n    }\n\n    // resize canvas\n    function resize() {\n      ctx.canvas.width = window.innerWidth;\n      ctx.canvas.height = window.innerHeight;\n    }\n\n    function draw(e) {\n      // mouse left button must be pressed\n      if (e.buttons !== 1) return;\n\n      ctx.beginPath(); // begin\n\n      ctx.lineWidth = 10;\n      ctx.lineCap = \"round\";\n      ctx.strokeStyle = \"black\";\n\n      ctx.moveTo(pos.x, pos.y); // from\n      setPosition(e);\n      ctx.lineTo(pos.x, pos.y); // to\n\n      ctx.stroke(); // draw it!\n    }\n  }\n  render() {\n    return (\n      <div className=\"sketch\" id=\"sketch\">\n        <canvas className=\"board\" id=\"board\"></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}